Transform:
  - AWS::Serverless-2016-10-31
  - Name: DatadogServerless
    Parameters:
      stackName: !Ref "AWS::StackName"
      apiKey: 434486c28a50b9acd7830bbc129ca5eb
      nodeLayerVersion: 78
      extensionLayerVersion: 22
      site: "datadoghq.com"
      env: !Ref Env # Optional
      service: active-orders-processor
Description: >
  active-orders-processor

  Active orders processor determines currently active orders for a given token mint
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 120
    Runtime: nodejs14.x

Parameters:
  Env: 
    Type: String
    AllowedValues:
      - testing
      - prod
    Description: Environment in which the app will be deployed

Mappings:
  EnvMapping:
    testing:
      DynamoDbEndpoint: ''
      DynamoDBARN: 'arn:aws:dynamodb:entitydb-arn/stream/2022-06-06T22:53:11.390' 
      EntityTableName: playdust-parrotfish-entitydb
      FunctionName: active-orders-processor-testing
      AsksBidsMintSQSName: 'DuplicateBidAskMintAddressQueue'
      PriceProcessorSQSName: 'DuplicateCollectionIdPriceQueue'
    prod:
      DynamoDbEndpoint: '' 
      DynamoDBARN: 'arn:aws:dynamodb:us-east-1:513523160844:table/playdust-parrotfish-prod-entitydb/stream/2022-06-07T18:55:10.458'
      EntityTableName: playdust-parrotfish-prod-entitydb
      FunctionName: active-orders-processor-prod
      AsksBidsMintSQSName: 'DuplicateBidAskMintAddressQueue'
      PriceProcessorSQSName: 'DuplicateCollectionIdPriceQueue'

Resources:
  ActiveOrdersProcessor:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties: 
      FunctionName: !FindInMap [ EnvMapping, !Ref Env, FunctionName ]
      CodeUri: ./build
      Handler: lambdaEntrypoint.handler
      MemorySize: 512
      Architectures:
        - x86_64
      Environment:
        Variables:
          DYNAMODB_ENDPOINT: !FindInMap [ EnvMapping, !Ref Env, DynamoDbEndpoint ]
          ENTITY_TABLE_NAME: !FindInMap [ EnvMapping, !Ref Env, EntityTableName ]
          BIDS_ASKS_QUEUE_NAME: !FindInMap [ EnvMapping, !Ref Env, AsksBidsMintSQSName ]
          PRICE_PROCESSOR_QUEUE_NAME: !FindInMap [ EnvMapping, !Ref Env, PriceProcessorSQSName ]
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonSQSFullAccess
        - SQSSendMessagePolicy:
            QueueName: !FindInMap [ EnvMapping, !Ref Env, AsksBidsMintSQSName ]
            QueueName: !FindInMap [ EnvMapping, !Ref Env, PriceProcessorSQSName ]
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !FindInMap [ EnvMapping, !Ref Env, DynamoDBARN ]
            BatchSize: 1
            StartingPosition: TRIM_HORIZON
            FilterCriteria:
              Filters:
                - Pattern: "{ \"dynamodb\": { \"NewImage\": { \"type\": { \"S\": [ \"bidTransaction\", \"askTransaction\", \"cancelBidTransaction\", \"cancelAskTransaction\", \"executeSaleTransaction\"] } } } }"